import { type NextPage } from 'next';
import Link from 'next/link';
import { useCallback, useState } from 'react';
import { useRouter } from 'next/router';
import { useForm, Controller } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';

import { signUpSchema, type ISignUp } from '../common/validation/authSchemas';
import { trpc } from '../common/trpc';

const SignUp: NextPage = () => {
  const router = useRouter();
  const [errorMessage, setErrorMessage] = useState('');
  const {
    handleSubmit,
    control,
    reset,
    formState: { errors },
  } = useForm<ISignUp>({
    defaultValues: {
      username: '',
      email: '',
      password: '',
    },
    resolver: zodResolver(signUpSchema),
  });

  const { mutateAsync } = trpc.signup.useMutation();

  const onSubmit = useCallback(
    async (data: ISignUp) => {
      try {
        const result = await mutateAsync(data);
        if (result?.status === 201) {
          reset();
          await router.push('/');
        }
      } catch (error: unknown) {
        if (error instanceof Error) {
          setErrorMessage(error.message);
        } else {
          setErrorMessage('An error occurred');
        }
      }
    },
    [mutateAsync, router, reset]
  );

  return (
    <div>
      {/* <Head>
        <title>Next App - Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      <div className="flex justify-center mt-5">
        <div className="bg-white rounded-md shadow-md p-6">
          <form onSubmit={(e) => { void handleSubmit(onSubmit)(e)}}>
            <h2 className="text-2xl font-bold mb-4">Create an account!</h2>
            <div className="mb-4">
              <Controller
                name="username"
                control={control}
                render={({ field }) => (
                  <input
                    type="text"
                    placeholder="Enter your username..."
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500"
                    {...field}
                  />
                )}
              />
            </div>
            <div className="mb-4">
              <Controller
                name="email"
                control={control}
                render={({ field }) => (
                  <input
                    type="email"
                    placeholder="Type your email..."
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500"
                    {...field}
                    onChange={(e) => {
                      field.onChange(e);
                      setErrorMessage('');
                    }}
                  />
                )}
              />
            </div>
            <div className="text-red-500 text-xs mb-2">
              {errors.email?.message}
            </div>
            <div className="mb-4">
              <Controller
                name="password"
                control={control}
                render={({ field }) => (
                  <input
                    type="password"
                    placeholder="Type your password..."
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500"
                    {...field}
                    onChange={(e) => {
                      field.onChange(e);
                      setErrorMessage('');
                    }}
                  />
                )}
              />
            </div>
            <div className="text-red-500 text-xs mb-2">
              {errors.password?.message?.replace('String', 'password')}
            </div>
            <p className="text-red-500 text-xs">
              {errorMessage ? `${errorMessage} Please try again` : ''}
            </p>
            <div className="flex justify-center">
              <button className="bg-blue-500 text-white px-4 py-2 rounded-md" type="submit">
                Sign Up
              </button>
            </div>
            <div className="mt-4 text-center">
              Already a member?
              <Link href="/" className="text-blue-500 underline">
                Login
              </Link>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default SignUp;
